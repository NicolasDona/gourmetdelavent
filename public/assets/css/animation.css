body{
    background-color: bisque;
    margin: 0%;
}

.container__door{
    height: 300px;
    width: 150px;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: 25%;
    background-color: red;
    background-position: 30%;
    background-size: cover;
}

img{
    object-fit: cover;
    height: 100%;
    width: 100%;
    cursor: pointer;
    position: absolute;
    z-index: 1;
}

.toExtend{
    position: relative;
    z-index: 0;
}

.fullsize{
    max-height: 100vh;
    max-width: 100vw;
}



/* @keyframes disappear {
    from{
        opacity: 1;
    } to {
        opacity: 0;
    }
} */

@keyframes openDoor {
    from {
        transform: perspective(1000px) rotateY(0deg); /* perspective : cela donne une impression de profondeur à l'animation, en simulant la manière dont les objets apparaissent plus petits à mesure qu'ils s'éloignent. */
        transform-origin: 0% 50%; /* Définit l'origine de transformation à gauche (0%) et au centre verticalement (50%) */
    }
    to {
        transform: perspective(1000px) rotateY(-90deg);
        transform-origin: 0% 50%; /* Maintient l'origine de transformation à gauche (0%) et au centre verticalement (50%) */
    }
}

@keyframes zoomIn {
    from {
        opacity: 0.5;
        transform: scale(0.5);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes zoomOut {
    from{
        opacity: 1;
        transform: scale(1);
    } to {
        opacity: 0;
        transform: scale(0.5);
    }
}


 /* * classes a appeler en JS */

/* .disappear{
    animation: disappear 3s cubic-bezier(0,.39,.73,.69) forwards;
} */

.open {
    animation: openDoor 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.zoomIn{
    animation: zoomIn 1s cubic-bezier(0.165, 0.840, 0.440, 1.000) forwards;
}

.zoomOut{
    animation: zoomOut 1s cubic-bezier(0.165, 0.840, 0.440, 1.000) forwards;
}


